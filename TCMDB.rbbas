#tag ClassProtected Class TCMDB	#tag Method, Flags = &h0		Sub Constructor()		  // tcmdb *tcmdbnew(void);		  Declare Function tcmdbnew Lib libtokyocabinet () As Ptr		  		  mdb=tcmdbnew()		  		  SetErrorMessage(True, "tcmdbnew "+Str(mdb.Size))		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(buckets As Integer)		  // tcmdb *tcmdbnew2(uint32_t bnum);		  Declare Function tcmdbnew2 Lib libtokyocabinet (bnum As Integer) As Ptr		  		  mdb=tcmdbnew2(buckets)		  		  SetErrorMessage(True, "tcmdbnew2 "+Str(mdb.Size))		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function Count() As UInt64		  // uint64_t tcmdbrnum(tcmdb *mdb);		  		  Declare Function tcmdbrnum Lib libtokyocabinet (mdb As Ptr) As UInt64		  		  dim mb As MemoryBlock		  mb=mdb.Ptr(0)		  Return tcmdbrnum(mdb)		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Destructor()		  // bool tcmdbdel(TCmdb *mdb);		  Declare Function tcmdbdel Lib libtokyocabinet (mdb As Ptr) As Boolean		  		  Dim b As Boolean		  b=tcmdbdel(mdb)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function ErrorCode() As Integer		  Return OSErr		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function ErrorMessage() As String		  Return errmsg		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub IterInit()		  // void tcmdbiterinit(TCmdb *mdb);		  Declare Sub tcmdbiterinit Lib libtokyocabinet (mdb As Ptr)		  		  tcmdbiterinit(mdb)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function IterNext() As Variant		  // char *tcmdbiternext2(TCmdb *mdb);		  Declare Function tcmdbiternext2 Lib libtokyocabinet (mdb As Ptr) As CString		  		  Dim kstr As String=tcmdbiternext2(mdb)		  		  Dim v As Variant=kstr		  Return v		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Key(index As Integer) As Variant		  Dim v As Variant		  		  if index>Keys.Ubound() Then Return v		  Return myKeys(index)		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Keys() As String()		  Return myKeys		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Lookup(k As String, default As Variant) As Variant		  // char *tcmdbget2(TCmdb *adb, const char *kstr);		  Declare Function tcmdbget2 Lib libtokyocabinet (mdb As Ptr, kstr As Ptr) As CString		  		  Dim kstr As MemoryBlock		  kstr=New MemoryBlock(k.LenB+1)		  kstr.CString(0)=k		  		  Dim vstr As String=tcmdbget2(mdb, kstr)		  Dim v As Variant=vstr		  		  if v<>"" Then		    SetErrorMessage(True, "[tcmdbget2] Success")		    Return v		  Else		    SetErrorMessage(True, "[tcmdbget2] Fail!")		    Return default		  End If		  		  		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SetErrorMessage(b As Boolean, m As String)		  if b Then		    OSErr=0		  Else		    OSErr=-1		  End If		  errmsg=m		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function Value(k As String) As Variant		  // char *tcmdbget2(TCmdb *adb, const char *kstr);		  Declare Function tcmdbget2 Lib libtokyocabinet (mdb As Ptr, kstr As Ptr) As CString		  		  Dim kstr As MemoryBlock		  kstr=New MemoryBlock(k.LenB+1)		  kstr.CString(0)=k		  		  Dim vstr As String=tcmdbget2(mdb, kstr)		  Dim v As Variant=vstr		  		  if v<>"" Then		    SetErrorMessage(True, "[tcmdbget2] Success")		    Return v		  Else		    SetErrorMessage(True, "[tcmdbget2] Fail!")		    Return v		  End If		  		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Value(k As String, Assigns v As Variant)		  // void tcmdbput2(TCmdb *mdb, const char *kstr, const char *vstr);		  Declare Sub tcmdbput2 Lib libtokyocabinet (mdb As Ptr, kstr As Ptr, vstr As Ptr)		  		  dim kstr, vstr As MemoryBlock		  kstr=New MemoryBlock(k.LenB+1)		  kstr.CString(0)=k		  vstr=New MemoryBlock(v.LenB+1)		  vstr.CString(0)=v.StringValue		  		  tcmdbput2(mdb, kstr, vstr)		  		  myKeys.Append k		  		  SetErrorMessage(True, "[tcmdbput2] "+Str(Count))		  		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected errmsg As MemoryBlock	#tag EndProperty	#tag Property, Flags = &h1		Protected mdb As MemoryBlock	#tag EndProperty	#tag Property, Flags = &h1		Protected myKeys(-1) As String	#tag EndProperty	#tag Property, Flags = &h1		Protected OSErr As Integer	#tag EndProperty	#tag Property, Flags = &h1		Protected path As MemoryBlock	#tag EndProperty	#tag Constant, Name = HDBOCREAT, Type = Double, Dynamic = False, Default = \"4", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOLCKNB, Type = Double, Dynamic = False, Default = \"32", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBONOLCK, Type = Double, Dynamic = False, Default = \"16", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOREADER, Type = Double, Dynamic = False, Default = \"1", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOTRUNC, Type = Double, Dynamic = False, Default = \"8", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOTSYNC, Type = Double, Dynamic = False, Default = \"64", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOWRITER, Type = Double, Dynamic = False, Default = \"2", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTBZIP, Type = Double, Dynamic = False, Default = \"4", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTDEFLATE, Type = Double, Dynamic = False, Default = \"2", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTEXCODEC, Type = Double, Dynamic = False, Default = \"16", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTLARGE, Type = Double, Dynamic = False, Default = \"1", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTTCBS, Type = Double, Dynamic = False, Default = \"8", Scope = Public	#tag EndConstant	#tag Constant, Name = libtokyocabinet, Type = String, Dynamic = False, Default = \"/usr/local/lib/libtokyocabinet.dylib", Scope = Public	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass