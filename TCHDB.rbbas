#tag ClassProtected Class TCHDB	#tag Method, Flags = &h0		Sub Constructor()		  // TCHDB *tchdbnew(void);		  Declare Function tchdbnew Lib libtokyocabinet () As Ptr		  // bool tchdbsetmutex(TCHDB *hdb);		  Declare Function tchdbsetmutex Lib libtokyocabinet (hdb As Ptr) As Boolean		  // bool tchdbtune(TCHDB *hdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts);		  Declare Function tchdbtune Lib libtokyocabinet (hdb As Ptr, bnum As Int64, apow As Int8, fpow As Int8, opts As UInt8) As Boolean		  // bool tchdbsetcache(TCHDB *hdb, int32_t rcnum);		  Declare Function tchdbsetcache Lib libtokyocabinet (hdb As Ptr, bnum As Int32) As Boolean		  // bool tchdbsetxmsiz(TCHDB *hdb, int64_t xmsiz);		  // Declare Function tchdbsetxmsiz Lib libtokyocabinet (hdb As Ptr, bnum As Int64) As Boolean		  // bool tchdbopen(TCHDB *hdb, const char *path, int omode);		  Declare Function tchdbopen Lib libtokyocabinet (hdb As Ptr, path As Ptr, omode As Integer) As Boolean		  		  Dim b As Boolean		  hdb=tchdbnew()		  		  b=tchdbsetmutex(hdb)		  SetErrorMessage()		  if Not b Then Return		  		  b=tchdbtune(hdb, 0, -1, -1, HDBTLARGE)		  SetErrorMessage()		  if Not b Then Return		  		  b=tchdbsetcache(hdb, 0)		  SetErrorMessage()		  if Not b Then Return		  		  'b=tchdbsetxmsiz(hdb, 0)		  'SetErrorMessage()		  'if Not b Then Return		  		  path="/tmp/hdb.hdb"		  path="*"		  b=tchdbopen(hdb, path, HDBOWRITER+HDBOCREAT+HDBOTRUNC)		  SetErrorMessage()		  if Not b Then Return		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function Count() As UInt64		  // uint64_t tchdbrnum(TCHDB *mdb);		  		  Declare Function tchdbrnum Lib libtokyocabinet (hdb As Ptr) As UInt64		  		  Return tchdbrnum(hdb)		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Destructor()		  // bool tchdbclose(TCHDB *hdb);		  // void tchdbdel(TCHDB *hdb);		  Declare Function tchdbclose Lib libtokyocabinet (hdb As Ptr) As Boolean		  Declare Sub tchdbdel Lib libtokyocabinet (hdb As Ptr)		  		  Dim b As Boolean		  b=tchdbclose(hdb)		  tchdbdel(hdb)		  Dim f As FolderItem		  f=GetFolderItem("/tmp/hdb.hdb")		  f.Delete()		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function ErrorCode() As Integer		  Return OSErr		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function ErrorMessage() As String		  Return errmsg		  		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SetErrorMessage()		  // int tchdbecode(TCHDB *hdb);		  Declare Function tchdbecode Lib libtokyocabinet (hdb As Ptr) As Integer		  // const char *tchdberrmsg(int ecode);		  Declare Function tchdberrmsg Lib libtokyocabinet (ecode As Integer) As Ptr		  		  OSErr=tchdbecode(hdb)		  errmsg=tchdberrmsg(OSErr)		  		  'MsgBox "Error "+Str(ErrorCode)+EndOfLine+ErrorMessage		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function Value(k As String) As Variant		  // char *tchdbget2(TCHDB *hdb, const char *kstr);		  Declare Function tchdbget2 Lib libtokyocabinet (hdb As Ptr, kstr As Ptr) As Ptr		  		  Dim kstr As MemoryBlock		  kstr=New MemoryBlock(k.LenB+1)		  kstr.CString(0)=k		  		  Dim vstr As MemoryBlock=tchdbget2(hdb, kstr)		  SetErrorMessage()		  		  Dim v As Variant=vstr.CString(0)		  Return v		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Value(k As String, Assigns v As Variant)		  // bool tchdbput(TCHDB *hdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz);		  Declare Function tchdbput Lib libtokyocabinet (hdb As Ptr, kbuf As Ptr, ksiz As Integer, vstr As Ptr, vsiz As Integer) As Boolean		  // bool tchdbput2(TCHDB *hdb, const char *kstr, const char *vstr);		  Declare Function tchdbput2 Lib libtokyocabinet (hdb As Ptr, kstr As Ptr, vstr As Ptr) As Boolean		  		  dim kstr, vstr As MemoryBlock		  kstr=New MemoryBlock(k.LenB+1)		  kstr.CString(0)=k		  vstr=New MemoryBlock(v.LenB+1)		  vstr.CString(0)=v		  		  Dim b As Boolean		  b=tchdbput2(hdb, kstr, vstr)		  SetErrorMessage()		  		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected errmsg As MemoryBlock	#tag EndProperty	#tag Property, Flags = &h1		Protected hdb As MemoryBlock	#tag EndProperty	#tag Property, Flags = &h1		Protected OSErr As Integer	#tag EndProperty	#tag Property, Flags = &h1		Protected path As MemoryBlock	#tag EndProperty	#tag Constant, Name = HDBOCREAT, Type = Double, Dynamic = False, Default = \"4", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOLCKNB, Type = Double, Dynamic = False, Default = \"32", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBONOLCK, Type = Double, Dynamic = False, Default = \"16", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOREADER, Type = Double, Dynamic = False, Default = \"1", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOTRUNC, Type = Double, Dynamic = False, Default = \"8", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOTSYNC, Type = Double, Dynamic = False, Default = \"64", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBOWRITER, Type = Double, Dynamic = False, Default = \"2", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTBZIP, Type = Double, Dynamic = False, Default = \"4", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTDEFLATE, Type = Double, Dynamic = False, Default = \"2", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTEXCODEC, Type = Double, Dynamic = False, Default = \"16", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTLARGE, Type = Double, Dynamic = False, Default = \"1", Scope = Public	#tag EndConstant	#tag Constant, Name = HDBTTCBS, Type = Double, Dynamic = False, Default = \"8", Scope = Public	#tag EndConstant	#tag Constant, Name = libtokyocabinet, Type = String, Dynamic = False, Default = \"/usr/local/lib/libtokyocabinet.dylib", Scope = Public	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass